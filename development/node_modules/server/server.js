var net = require('net');

// config structure:
// see http://nodejs.org/api/net.html#net_net_createconnection_options_connectionlistener
// {
//     port: 1234,
//     localAddress: '127.0.0.1'
// }

var createServer = function(config) {
    return new Server(config);
}

var Server = function(config) {
    if(typeof config === 'undefined') config = {localAddress: 0, port: 8124};
    this.config = config;
    
};

Server.prototype.start = function() {
    console.log('starting server');
    this.server = net.createServer(function(c) { //'connection' listener
        console.log('server connected');
        c.on('end', function() {
            console.log('server disconnected');
        });
        c.write('hello\r\n');
        c.pipe(c);
    });

    this.server.listen(this.config.port, this.config.localAddress, function() { //'listening' listener
      console.log('server bound');
    });
};

// this will stop new connections from being accepted
// and fire the callback when shutdown is complete
Server.prototype.shutdown = function() {
    console.log('shutting down server');
    this.server.close(function() {
        console.log('shutdown complete');
    });
};

Server.prototype.getServer = function() {
    return this.server;
};


module.exports = {
    createServer: createServer
};

